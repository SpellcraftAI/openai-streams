name: Release (production)

on:
  workflow_dispatch: {}

  pull_request_target:
    types:
      - closed

    branches:
      - master

env:
  GITHUB_TOKEN: ${{ secrets.OVERRIDE_GITHUB_TOKEN }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

jobs:
  Release:
    if: github.event_name == 'workflow_dispatch' || github.event.pull_request.merged == true

    name: Node.js v${{ matrix.nodejs }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10

    strategy:
      matrix:
        nodejs: [18]
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.nodejs }}

    - name: Authenticate with private NPM package
      run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

    - name: git config
      run: |
        git config user.name "${GITHUB_ACTOR}"
        git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

    - name: Use Git checkout with submodules
      uses: actions/checkout@v3
      with:
        submodules: recursive
        token: ${{ secrets.OVERRIDE_GITHUB_TOKEN }}

    - name: Use PNPM
      uses: pnpm/action-setup@v2
      with:
        version: latest

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        cache: pnpm
        node-version: ${{ matrix.node-version }}
    
    - name: Install
      run: pnpm i

    - name: Configure Git
      run: |
        git config user.name "${GITHUB_ACTOR}"
        git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

    - name: Build (ESM)
      run: pnpm build

    - name: Test & Release (ESM)
      run: npx release-it minor --ci -VV

    - name: Build (CJS)
      run: pnpm cjs

    - name: Test & Release (CJS)
      run: npm version prerelease --no-git-tag-version && npm publish --tag cjs
